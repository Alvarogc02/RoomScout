// Generated by view binder compiler. Do not edit!
package com.example.roomscout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.roomscout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdaptadorReservaAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancelar;

  @NonNull
  public final TextView tvFechaIda;

  @NonNull
  public final TextView tvFechaVuelta;

  @NonNull
  public final TextView tvNombreHotel;

  @NonNull
  public final TextView tvPersonas;

  @NonNull
  public final TextView tvPrecio;

  @NonNull
  public final TextView tvUsuario;

  private AdaptadorReservaAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnCancelar, @NonNull TextView tvFechaIda, @NonNull TextView tvFechaVuelta,
      @NonNull TextView tvNombreHotel, @NonNull TextView tvPersonas, @NonNull TextView tvPrecio,
      @NonNull TextView tvUsuario) {
    this.rootView = rootView;
    this.btnCancelar = btnCancelar;
    this.tvFechaIda = tvFechaIda;
    this.tvFechaVuelta = tvFechaVuelta;
    this.tvNombreHotel = tvNombreHotel;
    this.tvPersonas = tvPersonas;
    this.tvPrecio = tvPrecio;
    this.tvUsuario = tvUsuario;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdaptadorReservaAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdaptadorReservaAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adaptador_reserva_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdaptadorReservaAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancelar;
      Button btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.tvFechaIda;
      TextView tvFechaIda = ViewBindings.findChildViewById(rootView, id);
      if (tvFechaIda == null) {
        break missingId;
      }

      id = R.id.tvFechaVuelta;
      TextView tvFechaVuelta = ViewBindings.findChildViewById(rootView, id);
      if (tvFechaVuelta == null) {
        break missingId;
      }

      id = R.id.tvNombreHotel;
      TextView tvNombreHotel = ViewBindings.findChildViewById(rootView, id);
      if (tvNombreHotel == null) {
        break missingId;
      }

      id = R.id.tvPersonas;
      TextView tvPersonas = ViewBindings.findChildViewById(rootView, id);
      if (tvPersonas == null) {
        break missingId;
      }

      id = R.id.tvPrecio;
      TextView tvPrecio = ViewBindings.findChildViewById(rootView, id);
      if (tvPrecio == null) {
        break missingId;
      }

      id = R.id.tvUsuario;
      TextView tvUsuario = ViewBindings.findChildViewById(rootView, id);
      if (tvUsuario == null) {
        break missingId;
      }

      return new AdaptadorReservaAdminBinding((ConstraintLayout) rootView, btnCancelar, tvFechaIda,
          tvFechaVuelta, tvNombreHotel, tvPersonas, tvPrecio, tvUsuario);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
